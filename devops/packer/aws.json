{
  "variables": {
    "region": "us-east-1",
    "ami": "ami-c8bda8a2",
    "instance_type": "t2.nano",
    "ssh_user": "admin",
    "app_tar": "/tmp/speakeazy.tar.gz"
  },
  "_NOTE": "/tmp/speakeazy.tar.gz must exist at compile time, otherwise you get a bad source error",
  "builders": [
    {
      "name": "nginx",
      "type": "amazon-ebs",
      "region": "{{user `region`}}",
      "source_ami": "{{user `ami`}}",
      "instance_type": "{{user `instance_type`}}",
      "ssh_username": "{{user `ssh_user`}}",
      "ami_name": "nginx-{{timestamp}}"
    },
    {
      "name": "django",
      "type": "amazon-ebs",
      "region": "{{user `region`}}",
      "source_ami": "{{user `ami`}}",
      "instance_type": "{{user `instance_type`}}",
      "ssh_username": "{{user `ssh_user`}}",
      "ami_name": "django-{{timestamp}}"
    },
    {
      "name": "worker",
      "type": "amazon-ebs",
      "region": "{{user `region`}}",
      "source_ami": "{{user `ami`}}",
      "instance_type": "{{user `instance_type`}}",
      "ssh_username": "{{user `ssh_user`}}",
      "ami_name": "worker-{{timestamp}}"
    }
  ],
  "provisioners": [
    {
      "type": "shell-local",
      "only": [
        "django",
        "worker"
      ],
      "command": "npm run build && tar --exclude-vcs-ignores -zcf {{user `app_tar`}} ./ ./.env.sh ./speakeazy/static/css/build.css"
    },
    {
      "type": "shell",
      "inline": [
        "sudo timeout 180 /bin/bash -c 'until stat /var/lib/cloud/instance/boot-finished 2>/dev/null; do echo waiting ...; sleep 1; done'"
      ]
    },
    {
      "type": "file",
      "source": "{{user `app_tar`}}",
      "destination": "/tmp/speakeazy.tar.gz",
      "override": {
        "nginx": {
          "source": "{{template_dir}}/nginx/",
          "destination": "/tmp"
        }
      }
    },
    {
      "type": "shell",
      "execute_command": "{{ .Vars }} sudo -E sh '{{ .Path }}'",
      "override": {
        "nginx": {
          "inline": [
            "echo deb http://ftp.debian.org/debian jessie-backports main >> /etc/apt/sources.list",
            "apt-get update",
            "apt-get upgrade",
            "apt-get install --no-install-recommends --no-install-suggests -y nginx -t jessie-backports certbot",
            "",
            "mv /tmp/nginx.conf /etc/nginx/nginx.conf",
            "mv /tmp/letsencrypt.ini /etc/letsencrypt/cli.ini",
            "mv /tmp/letsencrypt.service /lib/systemd/system/",
            "mv /tmp/letsencrypt.timer /lib/systemd/system/",
            "TODO: run lets encrypt here",
            "systemctl enable letsencrypt.timer",
            "",
            "openssl dhparam -outform PEM -out /etc/speakeazy_dhparam.pem 2048",
            "echo You must ssh into the deployed instance and setup lets encrypt"
          ]
        },
        "django": {
          "script": "{{template_dir}}/django/django.sh"
        },
        "worker": {
          "script": "{{template_dir}}/worker/worker.sh"
        }
      }
    },
    {
      "type": "shell",
      "inline": [
        "sudo apt-get autoremove",
        "sudo apt-get clean"
      ]
    }
  ]
}
