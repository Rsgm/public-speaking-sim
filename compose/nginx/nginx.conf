user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    upstream app {
        server django:5000;
    }

    server {
#        listen 443 ssl;

#        # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
#        ssl_certificate /path/to/signed_cert_plus_intermediates;
#        ssl_certificate_key /path/to/private_key;
#        ssl_session_timeout 1d;
#        ssl_session_cache shared:SSL:50m;
#        ssl_session_tickets off;

#        # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
#        ssl_dhparam /path/to/dhparam.pem;

#        # modern configuration. tweak to your needs.
#        ssl_protocols TLSv1.1 TLSv1.2;
#        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
#        ssl_prefer_server_ciphers on;

#        # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
#        add_header Strict-Transport-Security max-age=15768000;

#        # OCSP Stapling ---
#        # fetch OCSP records from URL in ssl_certificate and cache them
#        ssl_stapling on;
#        ssl_stapling_verify on;

#        ## verify chain of trust of OCSP response using Root CA and Intermediate certs
#        ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

#        resolver <IP DNS resolver>;

        listen 80;
        charset     utf-8;



        location / {
            # checks for static file, if not found proxy to app
            try_files $uri @proxy_to_app;
        }

        # allow large uploads on the admin
        location /admin/ {
            client_max_body_size 500m;
        }

        # allow large uploads on the recording page
        location /r/ {
            client_max_body_size 3m;
        }

        location @proxy_to_app {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;

            proxy_pass   http://app;
        }

    }
}